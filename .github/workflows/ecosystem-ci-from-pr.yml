# integration tests for rspack ecosystem - run from pr comments
name: rspack-ecosystem-ci-from-pr

env:
  # 7 GiB by default on GitHub, setting to 6 GiB
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NODE_OPTIONS: --max-old-space-size=6144

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: "PR number (e.g. 9887)"
        required: true
        type: string
      branchName:
        description: "rspack branch to use"
        required: true
        type: string
        default: "main"
      repo:
        description: "rspack repository to use"
        required: true
        type: string
        default: "web-infra-dev/rspack"
      suite:
        description: "testsuite to run. runs all testsuits when `-`."
        required: false
        type: choice
        options:
          - "-"
          - modernjs
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id }}
    steps:
      - id: create-eco-ci-url
        uses: actions/github-script@v6
        with:
          script: |
            const url = `${context.serverUrl}//${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            return `⏳ Triggered ecosystem CI: [Open](${url})`
      - id: create-comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          script: ${{ steps.create-eco-ci-url.outputs.result }}

  execute-selected-suite:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: init
    if: "inputs.suite != '-'"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
        continue-on-error: true
      - run: corepack enable
      - run: pnpm --version
      - run: pnpm i --frozen-lockfile
      - run: >-
          pnpm tsx ecosystem-ci.ts
          --branch ${{ inputs.branchName }}
          --repo ${{ inputs.repo }}
          ${{ inputs.suite }}

  execute-all:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: init
    if: "inputs.suite == '-'"
    strategy:
      matrix:
        suite:
          - modernjs
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
        continue-on-error: true
      - run: corepack enable
      - run: pnpm --version
      - run: pnpm i --frozen-lockfile
      - run: >-
          pnpm tsx ecosystem-ci.ts
          --branch ${{ inputs.branchName }}
          --repo ${{ inputs.repo }}
          ${{ matrix.suite }}

  update-comment:
    runs-on: ubuntu-latest
    needs: [init, execute-selected-suite, execute-all]
    if: always()
    steps:
      - id: create-eco-ci-result
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { jobs } } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
              per_page: 100
            });

            const selectedSuite = context.payload.inputs.suite
            let result
            if (selectedSuite !== "-") {
              const { conclusion, html_url } = jobs.find(job => job.name === "execute-selected-suite")
              result = [{ suite: selectedSuite, conclusion, link: html_url }]
            } else {
              result = jobs
                .filter(job => job.name.startsWith('execute-all '))
                .map(job => {
                  const suite = job.name.replace(/^execute-all \(([^)]+)\)$/, "$1")
                  return { suite, conclusion: job.conclusion, link: job.html_url }
                })
            }

            const url = `${context.serverUrl}//${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            const urlLink = `[Open](${url})`

            const conclusionEmoji = {
              success: ":white_check_mark:",
              failure: ":x:",
              cancelled: ":stop_button:"
            }

            const body = `
            📝 Ran ecosystem CI: ${urlLink}

            | suite | result |
            |-------|--------|
            ${result.map(r => `| [${r.suite}](${r.link}) | ${conclusionEmoji[r.conclusion]} ${r.conclusion} |`).join("\n")}
            `
            return body
      - id: update-comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ needs.init.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          script: ${{ steps.create-eco-ci-result.outputs.result }}
